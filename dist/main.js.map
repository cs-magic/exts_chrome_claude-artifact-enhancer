{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtBA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAMA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7BA;AAEA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/config.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/core/main.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/blob2clipboard.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/const.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/doCopyPng.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/doDownloadZip.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/downloadImage.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/handleArtifact.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/svgString2pngBlob.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/svgString2zip.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/./src/utils/wait-parent-element.ts","webpack://@cs-magic/exts_chrome_claude-artifact-enhancer/../../packages_frontend/common/dist/str2ele.js"],"sourcesContent":["export const config = {\n  svg: {\n    export: {\n      width: {\n        min: 36,\n      },\n    },\n  },\n  png: {\n    export: {\n      ppi: {\n        default: 320,\n      },\n    },\n  },\n};\n","import { action, IFRAME_URL } from \"../utils/const\";\nimport { handleArtifact } from \"../utils/handleArtifact\";\nimport { Message } from \"../utils/message\";\nimport { downloadImage } from \"../utils/downloadImage\";\n\nconsole.log(\"Main script loaded\");\n\nwindow.addEventListener(\"message\", (event) => {\n  const message = event.data as Message;\n  if (event.origin === IFRAME_URL) console.log(\"[main received]: \", message);\n\n  switch (message.type) {\n    case action.iframeReturnCapture: {\n      const img = new Image();\n      img.src = message.data;\n      img.onload = function () {\n        downloadImage(img.src, \"screenshot.png\");\n      };\n      break;\n    }\n\n    case action.returnSVG:\n      window.svgString = message.data;\n      return;\n\n    default:\n      return;\n  }\n});\n\nconst observer = new MutationObserver(() => {\n  void handleArtifact();\n});\nobserver.observe(document.body, { subtree: true, childList: true });\n","export async function blob2clipboard(blob: Blob) {\n  try {\n    const clipboardItem = new ClipboardItem({ \"image/png\": blob });\n    await navigator.clipboard.write([clipboardItem]);\n    // todo: use toast\n    // alert(\"PNG copied to clipboard!\");\n  } catch (error) {\n    console.error(\"Error copying PNG to clipboard:\", error);\n    alert(\"PNG failed to copy to clipboard!\");\n  }\n}\n","export const IFRAME_URL = \"https://www.claudeusercontent.com\";\nexport const exportElementWrapperString = `<button id=\"export\" class=\"inline-flex items-center justify-center relative shrink-0 ring-offset-2 ring-offset-bg-300 ring-accent-main-100 focus-visible:outline-none focus-visible:ring-1 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none disabled:drop-shadow-none text-text-200 transition-all font-styrene active:bg-bg-400 hover:bg-bg-500/40 hover:text-text-100 h-8 w-8 rounded-md active:scale-95\" data-state=\"closed\"></button>`;\nexport const exportElementInnerString = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-image-down\"><path d=\"M10.3 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10l-3.1-3.1a2 2 0 0 0-2.814.014L6 21\"/><path d=\"m14 19 3 3v-5.5\"/><path d=\"m17 22 3-3\"/><circle cx=\"9\" cy=\"9\" r=\"2\"/></svg>`;\nexport const triggerElementString = `<div data-radix-popper-content-wrapper=\"\" style=\"position: fixed; left: 0px; top: 0px; transform: translate(1605.5px, 923.5px); min-width: max-content; --radix-popper-transform-origin: 50% 23px; will-change: transform; z-index: 50; --radix-popper-available-width: 1792px; --radix-popper-available-height: 946.5px; --radix-popper-anchor-width: 32px; --radix-popper-anchor-height: 32px;\"><div data-side=\"top\" data-align=\"center\" data-state=\"delayed-open\" class=\"px-2  py-1  text-xs  font-medium  font-sans  leading-tight  rounded-md  shadow-md  text-white  bg-black/80  backdrop-blur  break-words  z-50  max-w-[13rem]  [*:disabled_&amp;]:hidden\" style=\"--radix-tooltip-content-transform-origin: var(--radix-popper-transform-origin); --radix-tooltip-content-available-width: var(--radix-popper-available-width); --radix-tooltip-content-available-height: var(--radix-popper-available-height); --radix-tooltip-trigger-width: var(--radix-popper-anchor-width); --radix-tooltip-trigger-height: var(--radix-popper-anchor-height);\">Download IMG<span id=\"radix-:r1e:\" role=\"tooltip\" style=\"position: absolute; border: 0px; width: 1px; height: 1px; padding: 0px; margin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: nowrap; overflow-wrap: normal;\">Download IMG</span></div></div>`;\nexport const ARTIFACT_REACT_ID = \"artifact_react\";\nexport const ARTIFACT_DOWNLOAD_ALL_ID = \"artifact_download_all\";\nexport const ARTIFACT_COPY_PNG_ID = \"artifact_copy_png\";\nexport enum action {\n  mainRequestIframeCapture = \"mainRequestIframeCapture\",\n  mainRequestIframeHtml = \"mainRequestIframeHtml\",\n  iframeReturnCapture = \"iframeReturnCapture\",\n  returnIframeHtml = \"returnIframeHtml\",\n  returnSVG = \"returnSVG\",\n  requestDownloadSvgPng = \"requestDownloadSvgPng\",\n  returnDownloadSvgPng = \"returnDownloadSvgPng\",\n  requestCopyPNG = \"requestCopyPNG\",\n  fetchConversationChats = \"fetchConversationChats\",\n}\nexport const PAGE_DOWNLOAD_ALL_ID = \"download-all\";\n// for artifact copy png\nexport const lucideImagesSvgString = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-images\"><path d=\"M18 22H4a2 2 0 0 1-2-2V6\"/><path d=\"m22 13-1.296-1.296a2.41 2.41 0 0 0-3.408 0L11 18\"/><circle cx=\"12\" cy=\"8\" r=\"2\"/><rect width=\"16\" height=\"16\" x=\"6\" y=\"2\" rx=\"2\"/></svg>`;\n// for artifact download all\nexport const lucideArrowBigDownDashSvgString = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-arrow-big-down-dash\"><path d=\"M15 5H9\"/><path d=\"M15 9v3h4l-7 7-7-7h4V9z\"/></svg>`;\n","import { svgString2pngBlob } from \"./svgString2pngBlob\";\nimport { blob2clipboard } from \"./blob2clipboard\";\n\nexport const doCopyPng = async () => {\n  document.querySelector(\".fixed .sticky h3\").textContent;\n  const svgString = window.svgString;\n  if (!svgString) return alert(\"no svgString now\");\n\n  const pngBlog = await svgString2pngBlob(svgString);\n  void blob2clipboard(pngBlog);\n};\n","import { svgString2zip } from \"./svgString2zip\";\n\nexport const doDownloadZip = () => {\n  const fileName = document.querySelector(\".fixed .sticky h3\").textContent;\n  const svgString = window.svgString;\n  if (!svgString) return alert(\"no svgString now\");\n\n  svgString2zip(svgString, `${fileName}.png`)\n    .then((downloadId) =>\n      console.log(\"File saved with download ID:\", downloadId),\n    )\n    .catch((error) => console.error(\"Error:\", error));\n};\n","export function downloadImage(imageUrl: string, fileName: string) {\n  const link = document.createElement(\"a\");\n  link.href = imageUrl;\n  link.download = fileName || \"image.png\";\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","import { waitParentElement } from \"./wait-parent-element\";\nimport {\n  ARTIFACT_COPY_PNG_ID,\n  ARTIFACT_DOWNLOAD_ALL_ID,\n  lucideArrowBigDownDashSvgString,\n  lucideImagesSvgString,\n} from \"./const\";\nimport { doCopyPng } from \"./doCopyPng\";\nimport { doDownloadZip } from \"./doDownloadZip\";\nimport { str2ele } from \"@cs-magic/common-frontend/str2ele\";\n\nexport const handleArtifact = async () => {\n  const parentElement = await waitParentElement();\n  if (!parentElement) return;\n\n  const insertEle = (\n    id: string,\n    svgString: string,\n    onClick: () => void,\n    size = 16,\n  ) => {\n    let ele = parentElement.querySelector(`#${id}`);\n    if (ele) return;\n    const buttonElement = str2ele(`<button \nid=\"${id}\"\nclass=\"inline-flex\n  items-center\n  justify-center\n  relative\n  shrink-0\n  ring-offset-2\n  ring-offset-bg-300\n  ring-accent-main-100\n  focus-visible:outline-none\n  focus-visible:ring-1\n  disabled:pointer-events-none\n  disabled:opacity-50\n  disabled:shadow-none\n  disabled:drop-shadow-none text-text-200\n          transition-all\n          font-styrene\n          active:bg-bg-400\n          hover:bg-bg-500/40\n          hover:text-text-100 h-9 w-9 rounded-md active:scale-95\" data-testid=\"chat-controls\" data-state=\"closed\">\n         \n${svgString}\n          \n          </button>`) as HTMLButtonElement;\n\n    buttonElement.onclick = onClick;\n    parentElement.insertAdjacentElement(\"afterbegin\", buttonElement);\n\n    const svg = parentElement.querySelector(\"svg\") as SVGSVGElement;\n    svg.setAttribute(\"width\", size.toString());\n    svg.setAttribute(\"height\", size.toString());\n  };\n\n  insertEle(ARTIFACT_COPY_PNG_ID, lucideImagesSvgString, doCopyPng, 16);\n  insertEle(\n    ARTIFACT_DOWNLOAD_ALL_ID,\n    lucideArrowBigDownDashSvgString,\n    doDownloadZip,\n    20,\n  );\n};\n","export function svgString2pngBlob(svgString: string, ppi = 320): Promise<Blob> {\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n\n    const svgBlob = new Blob([svgString], { type: \"image/svg+xml\" });\n    const url = URL.createObjectURL(svgBlob);\n\n    const img = new Image();\n    img.onload = () => {\n      const scale = ppi / 72; // Default PPI for SVG is 72\n      canvas.width = img.width * scale;\n      canvas.height = img.height * scale;\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n      canvas.toBlob((blob) => {\n        URL.revokeObjectURL(url);\n        resolve(blob);\n      }, \"image/png\");\n    };\n\n    img.onerror = (err) => {\n      URL.revokeObjectURL(url);\n      reject(err);\n    };\n\n    img.src = url;\n  });\n}\n","import { config } from \"../config\";\nimport JSZip from \"jszip\";\nimport { svgString2pngBlob } from \"./svgString2pngBlob\";\n\nexport async function svgString2zip(\n  svgString: string,\n  fileName: string,\n  ppi = config.png.export.ppi.default,\n) {\n  const pngBlob = svgString2pngBlob(svgString, ppi);\n\n  // Create ZIP file\n  const zip = new JSZip();\n  zip.file(`${fileName}.svg`, svgString);\n  zip.file(`${fileName}.png`, pngBlob);\n\n  // Generate ZIP file\n  const zipBlob = await zip.generateAsync({ type: \"blob\" });\n\n  // Trigger download\n  const url = URL.createObjectURL(zipBlob);\n  const a = document.createElement(\"a\");\n  a.style.display = \"none\";\n  a.href = url;\n  a.download = `${fileName}.zip`;\n  document.body.appendChild(a);\n  a.click();\n  URL.revokeObjectURL(url);\n  document.body.removeChild(a);\n}\n","export const waitParentElement = (): Promise<HTMLElement> =>\n  new Promise((resolve) => {\n    const exportButtonObserver = new MutationObserver((mutation) => {\n      const publishButton = Array.from(\n        document.querySelectorAll(\"button\"),\n      ).find((button) => button.textContent.trim() === \"Publish\");\n      if (!publishButton) return;\n\n      const parentElement = publishButton.parentElement.parentElement;\n      exportButtonObserver.disconnect();\n      resolve(parentElement);\n    });\n\n    exportButtonObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n  });\n","export function str2ele(str) {\n    // const parser = new DOMParser();\n    // const doc = parser.parseFromString(str, \"text/html\");\n    // return doc.body.firstChild!;\n    const element = document.createElement(\"div\");\n    element.innerHTML = str;\n    return element.firstElementChild;\n}\n//# sourceMappingURL=str2ele.js.map"],"names":[],"sourceRoot":""}